// lib/features/advisors/domain/models/advisor.dart

/// –ó”©–≤–ª”©—Ö–∏–π–Ω –º—ç—Ä–≥—ç–∂–ª–∏–π–Ω —á–∏–≥–ª—ç–ª
enum AdvisorExpertise {
  career,
  university,
  scholarship,
  major,
  other;

  String get label {
    switch (this) {
      case AdvisorExpertise.career:
        return '–ö–∞—Ä—å–µ—Ä';
      case AdvisorExpertise.university:
        return '–ò—Ö —Å—É—Ä–≥—É—É–ª—å';
      case AdvisorExpertise.scholarship:
        return '–¢—ç—Ç–≥—ç–ª—ç–≥';
      case AdvisorExpertise.major:
        return '–ú—ç—Ä–≥—ç–∂–∏–ª';
      case AdvisorExpertise.other:
        return '–ë—É—Å–∞–¥';
    }
  }

  String get tag {
    switch (this) {
      case AdvisorExpertise.career:
        return '#CareerPlanning';
      case AdvisorExpertise.university:
        return '#UniversityAdvice';
      case AdvisorExpertise.scholarship:
        return '#Scholarship';
      case AdvisorExpertise.major:
        return '#MajorSelection';
      case AdvisorExpertise.other:
        return '#General';
    }
  }
}

/// –ó”©–≤–ª”©–≥”©”©–Ω–∏–π —Ç”©—Ä”©–ª
enum ConsultationType {
  chat,
  video;

  String get label {
    switch (this) {
      case ConsultationType.chat:
        return '–ß–∞—Ç';
      case ConsultationType.video:
        return '–í–∏–¥–µ–æ';
    }
  }

  String get icon {
    switch (this) {
      case ConsultationType.chat:
        return 'üí¨';
      case ConsultationType.video:
        return 'üé•';
    }
  }
}

/// –ó”©–≤–ª”©—Ö entity –º–æ–¥–µ–ª—å
class Advisor {
  final String id;
  final String name;
  final String title; // "–ú–£–ò–° - IT –±–∞–≥—à"
  final String imageUrl;
  final List<AdvisorExpertise> expertise;
  final double rating; // 0.0 - 5.0
  final int reviewCount;
  final String bio;
  final int experienceYears;
  final List<String> languages; // ["–ú–æ–Ω–≥–æ–ª", "English"]
  final bool verified;
  final Map<ConsultationType, int> pricing; // {chat: 5000, video: 10000}
  final List<DateTime> availableSlots; // next 14 days
  final bool isAvailableToday;

  const Advisor({
    required this.id,
    required this.name,
    required this.title,
    required this.imageUrl,
    required this.expertise,
    required this.rating,
    required this.reviewCount,
    required this.bio,
    required this.experienceYears,
    required this.languages,
    required this.verified,
    required this.pricing,
    required this.availableSlots,
    required this.isAvailableToday,
  });

  /// “Æ–Ω–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª —Ñ–æ—Ä–º–∞—Ç—Ç–∞–π
  String getPriceLabel(ConsultationType type) {
    final price = pricing[type];
    if (price == null || price == 0) return '“Æ–Ω—ç–≥“Ø–π';
    return '${_formatPrice(price)}‚ÇÆ';
  }

  /// –•–æ—ë—Ä —Ç”©—Ä–ª–∏–π–Ω “Ø–Ω–∏–π–≥ —Ö–∞—Ä—É—É–ª–∞—Ö
  String get fullPriceLabel {
    final chatPrice = pricing[ConsultationType.chat] ?? 0;
    final videoPrice = pricing[ConsultationType.video] ?? 0;

    if (chatPrice == 0 && videoPrice == 0) return '“Æ–Ω—ç–≥“Ø–π –∑”©–≤–ª”©–≥”©”©';
    if (chatPrice == 0) return 'Video ‚Äì ${_formatPrice(videoPrice)}‚ÇÆ';
    if (videoPrice == 0) return 'Chat ‚Äì ${_formatPrice(chatPrice)}‚ÇÆ';

    return 'Chat ‚Äì ${_formatPrice(chatPrice)}‚ÇÆ / Video ‚Äì ${_formatPrice(videoPrice)}‚ÇÆ';
  }

  /// –¢—É—Ä—à–ª–∞–≥—ã–Ω –º—ç–¥—ç—ç–ª—ç–ª
  String get experienceLabel => '$experienceYears –∂–∏–ª —Ç—É—Ä—à–ª–∞–≥–∞—Ç–∞–π';

  /// –•—ç–ª–Ω–∏–π –∂–∞–≥—Å–∞–∞–ª—Ç
  String get languagesList => languages.join(' / ');

  String _formatPrice(int price) {
    if (price >= 1000) {
      return '${(price / 1000).toStringAsFixed(price % 1000 == 0 ? 0 : 1)}k';
    }
    return price.toString();
  }
}
