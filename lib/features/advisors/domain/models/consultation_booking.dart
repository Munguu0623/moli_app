// lib/features/advisors/domain/models/consultation_booking.dart

import 'advisor.dart';

/// –ó”©–≤–ª”©–≥”©”©–Ω–∏–π —Å—Ç–∞—Ç—É—Å
enum BookingStatus {
  pending,
  approved,
  completed,
  cancelled;

  String get label {
    switch (this) {
      case BookingStatus.pending:
        return '–•“Ø–ª—ç—ç–≥–¥—ç–∂ –±—É–π';
      case BookingStatus.approved:
        return '–ë–∞—Ç–∞–ª–≥–∞–∞–∂—Å–∞–Ω';
      case BookingStatus.completed:
        return '–î—É—É—Å—Å–∞–Ω';
      case BookingStatus.cancelled:
        return '–¶—É—Ü–ª–∞–≥–¥—Å–∞–Ω';
    }
  }

  String get emoji {
    switch (this) {
      case BookingStatus.pending:
        return '‚è≥';
      case BookingStatus.approved:
        return '‚úÖ';
      case BookingStatus.completed:
        return 'üéâ';
      case BookingStatus.cancelled:
        return '‚ùå';
    }
  }
}

/// –ó”©–≤–ª”©–≥”©”© —Ç–æ–≤–ª–æ—Ö –º–æ–¥–µ–ª—å
class ConsultationBooking {
  final String id;
  final String studentId;
  final String advisorId;
  final String advisorName;
  final String advisorImageUrl;
  final DateTime scheduledTime;
  final ConsultationType type;
  final BookingStatus status;
  final String? topic;
  final int price;
  final DateTime createdAt;

  const ConsultationBooking({
    required this.id,
    required this.studentId,
    required this.advisorId,
    required this.advisorName,
    required this.advisorImageUrl,
    required this.scheduledTime,
    required this.type,
    required this.status,
    this.topic,
    required this.price,
    required this.createdAt,
  });

  /// –¶–∞–≥ —Ñ–æ—Ä–º–∞—Ç—Ç–∞–π —Ö–∞—Ä—É—É–ª–∞—Ö
  String get timeLabel {
    final hour = scheduledTime.hour.toString().padLeft(2, '0');
    final minute = scheduledTime.minute.toString().padLeft(2, '0');
    return '$hour:$minute';
  }

  /// –û–≥–Ω–æ–æ —Ñ–æ—Ä–º–∞—Ç—Ç–∞–π —Ö–∞—Ä—É—É–ª–∞—Ö
  String get dateLabel {
    final months = [
      '–ù—ç–≥',
      '–•–æ—ë—Ä',
      '–ì—É—Ä–∞–≤',
      '–î”©—Ä”©–≤',
      '–¢–∞–≤',
      '–ó—É—Ä–≥–∞–∞',
      '–î–æ–ª–æ–æ',
      '–ù–∞–π–º',
      '–ï—Å',
      '–ê—Ä–∞–≤',
      '–ê—Ä–≤–∞–Ω –Ω—ç–≥',
      '–ê—Ä–≤–∞–Ω —Ö–æ—ë—Ä',
    ];
    return '${months[scheduledTime.month - 1]}-—Ä —Å–∞—Ä—ã–Ω ${scheduledTime.day}';
  }

  /// –ó”©–≤–ª”©–≥”©”© —ç—Ö–ª—ç—Ö –±–æ–ª–æ–º–∂—Ç–æ–π —ç—Å—ç—Ö (approved + —Ü–∞–≥ –Ω—å –æ–¥–æ–æ)
  bool get canJoin {
    if (status != BookingStatus.approved) return false;
    final now = DateTime.now();
    final diff = scheduledTime.difference(now);
    // 10 –º–∏–Ω—É—Ç—ã–Ω ”©–º–Ω”©”©—Å —ç—Ö–ª“Ø“Ø–ª–∂ –±–æ–ª–Ω–æ
    return diff.inMinutes <= 10 && diff.inMinutes >= -30;
  }

  ConsultationBooking copyWith({
    String? id,
    String? studentId,
    String? advisorId,
    String? advisorName,
    String? advisorImageUrl,
    DateTime? scheduledTime,
    ConsultationType? type,
    BookingStatus? status,
    String? topic,
    int? price,
    DateTime? createdAt,
  }) {
    return ConsultationBooking(
      id: id ?? this.id,
      studentId: studentId ?? this.studentId,
      advisorId: advisorId ?? this.advisorId,
      advisorName: advisorName ?? this.advisorName,
      advisorImageUrl: advisorImageUrl ?? this.advisorImageUrl,
      scheduledTime: scheduledTime ?? this.scheduledTime,
      type: type ?? this.type,
      status: status ?? this.status,
      topic: topic ?? this.topic,
      price: price ?? this.price,
      createdAt: createdAt ?? this.createdAt,
    );
  }
}
